import groovy.sql.Sql
import java.sql.SQLException

plugins {
    id 'java'
}

configurations {
    driver
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.3.2.RELEASE'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'

    driver group: 'org.hsqldb', name: 'hsqldb', version: '2.4.0'
    runtimeOnly group: 'org.hsqldb', name: 'hsqldb', version: '2.4.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task startDatabase(type: JavaExec) {
    classpath configurations.driver
    main = 'org.hsqldb.server.Server'
    args = ['--database.0', 'file:build/database/data', '--dbname.0', 'data']
}

task stopDatabase {
    doLast {
        executeSqlQuery('SHUTDOWN')
    }
}

task createTables {
    doLast {
        executeSqlFile('createTables.sql')
    }
}

task addTestData {
    doLast {
        executeSqlFile('addTestData.sql')
    }
}

task dropTables {
    doLast {
        executeSqlFile('dropTables.sql')
    }
}

task refreshData {
    dependsOn 'dropTables'
    dependsOn 'createTables'
    dependsOn 'addTestData'
    tasks.findByName('createTables').mustRunAfter 'dropTables'
    tasks.findByName('addTestData').mustRunAfter 'createTables'
}

configurations.driver.each { file ->
    GroovyObject.class.classLoader.addURL(file.toURI().toURL())
}

def executeSqlFile(String fileName) {
    String sqlScript = new File("${projectDir}/src/scripts/" + fileName).text
    executeSqlQuery(sqlScript)
}

def executeSqlQuery(String sqlScript) {
    def properties = [user: 'SA', password: '', allowMultiQueries: 'false'] as Properties
    def url = "jdbc:hsqldb:hsql://localhost/data"
    def driver = 'org.hsqldb.jdbc.JDBCDriver'
    def connection = null
    try {
        connection = Sql.newInstance(url, properties, driver)
        connection.execute(sqlScript)
    }
    catch (SQLException e) {
        logger.log(LogLevel.INFO, 'Error in database connection', e)
    }
    finally {
        if (connection != null) {
            connection.close()
        }
    }
}

